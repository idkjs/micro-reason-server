// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Https = require("https");
var Caml_array = require("bs-platform/lib/js/caml_array.js");

var hostname = "localhost";

var questionParam = "/?question=";

var successParam = "/contact=";

var query = {};

query["success"] = "true";

var expectedUrl = {
  path: {
    hd: "contact",
    tl: /* [] */0
  },
  hash: "",
  search: "success=true"
};

console.log(query);

console.log(expectedUrl);

function search(resp) {
  console.log("search_resp", resp);
  if (resp === undefined) {
    return "";
  }
  switch (resp) {
    case "" :
    case "?" :
        return "";
    default:
      console.log("raw?", resp);
      return resp;
  }
}

function search2(resp) {
  console.log("search_resp", resp);
  if (resp === undefined) {
    return false;
  }
  switch (resp) {
    case "" :
    case "?" :
        return false;
    default:
      console.log("raw?", resp);
      var x = resp === "success=true";
      console.log("raw_x", x);
      return x;
  }
}

function create_server(http) {
  var server = http.createServer(function (req, resp) {
        if (req.url.startsWith(successParam)) {
          console.log("req##url?", req.url);
          console.log("Js.String.split_successParam", req.url.split(successParam));
          console.log("Js.String.split_successParam->Array.get", Caml_array.get(req.url.split(successParam), 1));
          var success = decodeURI(Caml_array.get(req.url.split(successParam), 1));
          console.log("success", success);
          console.log("success_req##url", req.url);
          console.log("search(Some(req##url)", search(req.url));
          console.log("search(Some(success)): ", search(success));
          if (search2(success)) {
            return resp.end("Success!");
          } else {
            return resp.end("Contact Failed!");
          }
        }
        if (req.url.startsWith(questionParam)) {
          var question = decodeURI(Caml_array.get(req.url.split(questionParam), 1));
          console.log(question);
          return resp.end("Hello World");
        }
        resp.statusCode = 404;
        return resp.end("Uknown parameter");
      });
  return server.listen(5000, hostname, (function (param) {
                console.log("Server running at http://" + (hostname + (":" + (String(5000) + "/"))));
                
              }));
}

console.log("try http://" + hostname + ":" + 5000 + "/?question=AnyoneThere");

console.log("try http://" + hostname + ":" + 5000 + "/?contact=success=true");

console.log("try http://" + hostname + ":" + 5000 + "/?contact=success=false");

create_server(Https);

var port = 5000;

var path = "contact/";

exports.port = port;
exports.hostname = hostname;
exports.questionParam = questionParam;
exports.successParam = successParam;
exports.path = path;
exports.query = query;
exports.expectedUrl = expectedUrl;
exports.search = search;
exports.search2 = search2;
exports.create_server = create_server;
/*  Not a pure module */
